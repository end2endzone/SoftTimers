name: Windows

on: [push, pull_request]

env:
  PlatformToolset: v140

  # build platform, i.e. x86, x64, Any CPU. This setting is optional.
  Platform: Win32

  # build Configuration, i.e. Debug, Release, etc.
  Configuration: Release

  ARDUINO_IDE_VERSION: 1.8.13
  
jobs:
  build:
    # For a list of available runner types, refer to
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure GIT
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        git config --local core.autocrlf true
        git config --local advice.detachedHead false
        git submodule update --init --recursive

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Create new environment variables
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        python -c "import os; print('GIT_REPOSITORY=' + os.path.split(os.getenv('GITHUB_REPOSITORY'))[1]);" >> %GITHUB_ENV%
        python -c "import os; print('GIT_BRANCH=' + os.path.split(os.getenv('GITHUB_REF'))[1]);" >> %GITHUB_ENV%
        echo GITHUB_WORKFLOW=%GITHUB_WORKFLOW%>> %GITHUB_ENV%

    - name: List environment variables for debugging
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        set

    - name: Deploy 'tests not available' badge before building
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.BADGES }}
        gist_id: 58cf6c72c08e706335337d5ef9ca48e8
        gist_file_name: ${{env.GIT_REPOSITORY}}.${{env.GIT_BRANCH}}.${{env.GITHUB_WORKFLOW}}.json
        file_path: ./ci/github/tests_not_available.badge.json
    
    - name: Install Arduino IDE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_ide_install.bat

    - name: Install SoftTimers arduino library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_library_install.bat

    - name: Install Google Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\install_googletest.bat

    - name: Install RapidAssist
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\install_rapidassist.bat

    - name: Install win32arduino
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\install_win32arduino.bat

    - name: Build library
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\build_library.bat

    - name: Build Arduino sketch - Countdown
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat Countdown

    - name: Build Arduino sketch - CycleHighPin
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat CycleHighPin

    - name: Build Arduino sketch - FadeLed
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat FadeLed

    - name: Build Arduino sketch - ProgressBar
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat ProgressBar

    - name: Build Arduino sketch - StateMachine
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat StateMachine

    - name: Build Arduino sketch - ToggleLed
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat ToggleLed

    - name: Build Arduino sketch - ToggleLedAdvanced
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\arduino_build_sketch.bat ToggleLedAdvanced

    - name: Run unit tests
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: call ci\github\test_script.bat

    - name: Search unit test report file
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        for /f "tokens=* usebackq" %%f in (`dir/b/s build\bin\${{env.configuration}}\softtimers_unittest*.xml`) do (set UNITTEST_REPORT_PATH=%%f)
        echo UNITTEST_REPORT_PATH=%UNITTEST_REPORT_PATH%
        echo UNITTEST_REPORT_PATH=%UNITTEST_REPORT_PATH% >> %GITHUB_ENV%
      
    - name: Create test badge
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: python ci\github\maketestbadge.py ${{env.UNITTEST_REPORT_PATH}}
      
    - name: Deploy test badge to gist
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.BADGES }}
        gist_id: 58cf6c72c08e706335337d5ef9ca48e8
        gist_file_name: ${{env.GIT_REPOSITORY}}.${{env.GIT_BRANCH}}.${{env.GITHUB_WORKFLOW}}.json
        file_path: ./badge.json
    
    - name: Archive test results
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results
        path: build\bin\${{env.Configuration}}\softtimers_unittest*.xml
